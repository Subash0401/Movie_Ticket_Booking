{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin-dashboard/add-location/add-location.component.ts","./src/app/admin/admin-dashboard/add-location/add-location.component.html","./src/app/admin/admin-dashboard/add-slot/add-slot.component.ts","./src/app/admin/admin-dashboard/add-slot/add-slot.component.html","./src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.ts","./src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-dashboard/allbookings/allbookings.component.ts","./src/app/admin/admin-dashboard/allbookings/allbookings.component.html","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/signup/signup.component.html","./src/app/dashboard/bookings/bookings.component.ts","./src/app/dashboard/bookings/bookings.component.html","./src/app/dashboard/bookslot/bookslot.component.ts","./src/app/dashboard/bookslot/bookslot.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/slots/slots.component.ts","./src/app/dashboard/slots/slots.component.html","./src/app/header-login/header-login.component.ts","./src/app/header-login/header-login.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home-main-section/home-main-section.component.ts","./src/app/home-main-section/home-main-section.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/admin.service.ts","./src/app/services/bookings.service.ts","./src/app/services/locations.service.ts","./src/app/services/slots.service.ts","./src/app/services/users.service.ts","./src/app/services/vehicle.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Locations } from 'src/app/models/locations.model';\r\n\r\n@Component({\r\n  selector: 'app-add-location',\r\n  templateUrl: './add-location.component.html',\r\n  styleUrls: ['./add-location.component.css']\r\n})\r\nexport class AddLocationComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    location_name : new FormControl('', Validators.required),\r\n    area : new FormControl('', Validators.required),\r\n    cast : new FormControl('', Validators.required),\r\n    bannerimage : new FormControl('', Validators.required)\r\n  })\r\n  \r\n  constructor(private locationService: LocationsService) { }\r\n\r\n  locations$ : Locations[];\r\n\r\n  ngOnInit(): void {\r\n    this.loadLocations();\r\n  }\r\n\r\n   onSubmit(){\r\n    this.locationService.addLocation(JSON.stringify(this.form.value))\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Movie Added\")\r\n      }\r\n      else{\r\n        alert('Something went wrong')\r\n      }\r\n    }))\r\n   }\r\n\r\n   loadLocations(){\r\n    return this.locationService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Movie</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"location_name\" [ngClass]=\"{ 'is-invalid':form.get('location_name').touched && form.get('location_name').invalid}\" name=\"location_name\" type=\"text\" placeholder=\"Movie Name\"  autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"area\" [ngClass]=\"{ 'is-invalid':form.get('area').touched && form.get('area').invalid}\" name=\"area\" type=\"text\" placeholder=\"Theatre Name\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"cast\" [ngClass]=\"{ 'is-invalid':form.get('cast').touched && form.get('cast').invalid}\" name=\"area\" type=\"text\" placeholder=\"About the Movie and Cast\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"bannerimage\" [ngClass]=\"{ 'is-invalid':form.get('bannerimage').touched && form.get('bannerimage').invalid}\" name=\"bannerimage\" type=\"text\" placeholder=\"Paste the Poster Image URL\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-5 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Movies Available:</h3>\r\n                        </div>\r\n                        \r\n                        <div class=\"card m-2\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col\">\r\n                                    <b>Movie</b>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                   <b>Theatre</b>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let location of locations$'>\r\n                                <div class=\"col\" >\r\n                                    {{location.location_name}}\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    {{location.area}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SlotsService } from 'src/app/services/slots.service';\r\nimport { Slots } from 'src/app/models/slots.model';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Locations } from 'src/app/models/locations.model';\r\n\r\n@Component({\r\n  selector: 'app-add-slot',\r\n  templateUrl: './add-slot.component.html',\r\n  styleUrls: ['./add-slot.component.css']\r\n})\r\nexport class AddSlotComponent implements OnInit {\r\n  \r\n  slots$: Slots[];\r\n  locations$: Locations[];\r\n  form = new FormGroup({\r\n    locationid : new FormControl('', Validators.required),\r\n    slotid : new FormControl('', Validators.required),\r\n    slotno : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private slotService: SlotsService, private locationService : LocationsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSlots();\r\n    this.loadLocations();\r\n  }\r\n  onSubmit(){\r\n    this.slotService.addSlot(JSON.stringify(this.form.value))\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Show Added\")\r\n      }\r\n      else{\r\n        alert('Something went wrong')\r\n      }\r\n    }))\r\n  }\r\n\r\n  getAllSlots(){\r\n    this.slotService.getAllSlots()\r\n    .subscribe(data => this.slots$ = data)\r\n  }\r\n\r\n  loadLocations(){\r\n    return this.locationService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Shows</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <div class=\"form-group\">\r\n                                        <label ><h3 class=\"font-weight-bold m-0\">Select Movie:</h3></label>\r\n                                        <select class=\"form-control\" formControlName=\"locationid\" [ngClass]=\"{ 'is-invalid':form.get('locationid').touched && form.get('locationid').invalid}\" name=\"locationid\">\r\n                                          <option *ngFor='let location of locations$' value=\"{{location.locationid}}\">{{location.locationid}}. {{location.location_name}}</option>\r\n                                        </select>                                    \r\n                                        <div class=\"invalid-feedback\">\r\n                                            <div>\r\n                                                This Field is required!!\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"slotid\" [ngClass]=\"{ 'is-invalid':form.get('slotid').touched && form.get('slotid').invalid}\" name=\"slotid\" type=\"text\" placeholder=\"Show ID\"  autocomplete=\"off\" required>\r\n                                    <!--<small>Format: showid + show + show no</small>-->\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"slotno\" [ngClass]=\"{ 'is-invalid':form.get('slotno').touched && form.get('slotno').invalid}\" name=\"slotno\" type=\"text\" placeholder=\"Show Time\" required>\r\n                                    <!--<small>Format: Slot + slotno</small>-->\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-2 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Shows Available:</h3>\r\n                        </div>\r\n                        <div class=\"card m-2 slots\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col-2\">\r\n                                    <b>Movie ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                   <b>Show ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <b>Show Time</b>\r\n                                 </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let slot of slots$'>\r\n                                <div class=\"col-2\" >\r\n                                    {{slot.locationid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{slot.slotid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{slot.slotno}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\n\r\n@Component({\r\n  selector: 'app-add-vehicle',\r\n  templateUrl: './add-vehicle.component.html',\r\n  styleUrls: ['./add-vehicle.component.css']\r\n})\r\nexport class AddVehicleComponent implements OnInit {\r\n\r\n  vehicles$ : Vehicle[];\r\n  form = new FormGroup({\r\n    vehicle_type : new FormControl('', Validators.required),\r\n    cost : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private vehicleservice : VehicleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadVehicle();\r\n  }\r\n\r\n  loadVehicle(){\r\n    this.vehicleservice.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data) \r\n  }\r\n\r\n  onSubmit(){\r\n    this.vehicleservice.addVehicle(JSON.stringify(this.form.value))\r\n    .subscribe(data => console.log(data))\r\n    alert('Seating Added')\r\n    location.reload();\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Seating</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"vehicle_type\" [ngClass]=\"{ 'is-invalid':form.get('vehicle_type').touched && form.get('vehicle_type').invalid}\" name=\"vehicle_type\" type=\"text\" placeholder=\"Seating Type\"  autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"cost\" [ngClass]=\"{ 'is-invalid':form.get('cost').touched && form.get('cost').invalid}\" name=\"cost\" type=\"text\" placeholder=\"Price\" autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-2 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Seatings Available:</h3>\r\n                        </div>\r\n                        <div class=\"card m-2 slots\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col-2\">\r\n                                    <b>Seating ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                   <b>Seating Type</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <b>Price</b>\r\n                                 </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let vehicle of vehicles$'>\r\n                                <div class=\"col-2\" >\r\n                                    {{vehicle.vehicleid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{vehicle.vehicle_type}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{vehicle.cost}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.clear()\r\n    this.route.navigate(['admin'])\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.route.navigate(['admin'])\r\n    }\r\n  }\r\n}\r\n","<!-- <app-header-login></app-header-login> -->\r\n<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard\" class=\"button\">Add Movies</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/add-slot\" class=\"button\">Add Shows</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/add-vehicle\" class=\"button\">Add Seating</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/allbookings\" class=\"button\">All Bookings</button>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"logout()\" class=\"button\">Logout</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Bookings } from 'src/app/models/bookings.model';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\n\r\n@Component({\r\n  selector: 'app-allbookings',\r\n  templateUrl: './allbookings.component.html',\r\n  styleUrls: ['./allbookings.component.css']\r\n})\r\nexport class AllbookingsComponent implements OnInit {\r\n\r\n  AllBookings$ : Bookings[];\r\n\r\n  constructor(private bookingsService : BookingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBookings();\r\n  }\r\n\r\n  getAllBookings(){\r\n    return this.bookingsService.getAllBookings()\r\n    .subscribe(data => this.AllBookings$ = data)\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>All Bookings</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead\">\r\n                      <tr>\r\n                        <th scope=\"col\">Booking ID</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Seating</th>\r\n                        <!--<th scope=\"col\">Vehicle No</th>-->\r\n                        <!--<th scope=\"col\">Date</th>-->\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Count</th>\r\n                        <th scope=\"col\">Cost</th>\r\n                        <th scope=\"col\">Location ID</th>\r\n                        <th scope=\"col\">Slot ID</th>\r\n                        <th scope=\"col\">Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                      <tr *ngFor='let booking of AllBookings$'>\r\n                        <th scope=\"row\">{{booking.bookingid}}</th>\r\n                        <td>{{booking.email}}</td>\r\n                        <td>{{booking.vehicle_type}}</td>\r\n                        <!--<td>{{booking.vehicle_no}}</td>-->\r\n                        <!--<td>{{booking.date}}</td>-->\r\n                        <td>{{booking.time}}</td>\r\n                        <td>{{booking.duration}}</td>\r\n                        <td>{{booking.cost}}</td>\r\n                        <td>{{booking.locationid}}</td>\r\n                        <td>{{booking.slotid}}</td>\r\n                        <div *ngIf='booking.paid == 1'>\r\n                          <td class=\"text-success\">Confirmed</td>\r\n                        </div>\r\n                        <div *ngIf='booking.paid == 0'>\r\n                          <td class=\"text-danger\">Pending</td>\r\n                        </div>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    adminid : new FormControl('', Validators.required),\r\n    password : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private route : Router, private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit() {\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    this.adminService.loginCheck(loginJson)\r\n    .subscribe((data => {\r\n      if(data == true){\r\n      alert(\"Login successful\");\r\n      var jsonData = JSON.parse(loginJson);\r\n      this.storeLogin(jsonData['email']);\r\n      this.route.navigate(['/admin-dashboard']);\r\n      \r\n      }\r\n      else{\r\n        alert(\"Invalid Login\"); \r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem('admin',email);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <!-- <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button> -->\r\n                        <h2>Admin Login</h2> \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"adminid\" [ngClass]=\"{ 'is-invalid':form.get('adminid').touched && form.get('adminid').invalid}\" name=\"adminid\" type=\"email\" placeholder=\"Admin ID\" autocomplete=\"off\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('adminid').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"mt-4\">\r\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Forgot Password ?</button></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Login</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SlotsComponent } from './dashboard/slots/slots.component';\r\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\r\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\r\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\r\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\r\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:HomeComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'signup',component:SignupComponent},\r\n  {path:'dashboard',component:DashboardComponent,\r\n  children:[\r\n    {path:'',component:SlotsComponent},\r\n    {path:'bookings',component:BookingsComponent},\r\n    {path:'bookslot/:locationid',component:BookslotComponent}\r\n  ]},\r\n  {path:'admin',component: AdminComponent,\r\n  children:[\r\n    {path:'',component:AdminLoginComponent}\r\n  ]},\r\n  {path:'admin-dashboard',component: AdminDashboardComponent,\r\n  children:[\r\n    {path:'',component: AddLocationComponent},\r\n    {path:'add-slot', component: AddSlotComponent},\r\n    {path:'allbookings', component: AllbookingsComponent},\r\n    {path: 'add-vehicle', component: AddVehicleComponent}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'car-parking';\r\n\r\n}\r\n\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeMainSectionComponent } from './home-main-section/home-main-section.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SlotsComponent } from './dashboard/slots/slots.component';\r\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\r\n\r\nimport { AdminService} from './services/admin.service';\r\nimport { LocationsService } from './services/locations.service';\r\nimport { BookingsService } from './services/bookings.service';\r\nimport { VehicleService } from './services/vehicle.service';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderLoginComponent } from './header-login/header-login.component';\r\nimport { UsersService } from './services/users.service';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\r\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\r\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\r\nimport { SlotsService } from './services/slots.service';\r\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeMainSectionComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    SlotsComponent,\r\n    BookingsComponent,\r\n    DashboardComponent,\r\n    BookslotComponent,\r\n    HeaderLoginComponent,\r\n    AdminComponent,\r\n    AdminLoginComponent,\r\n    AdminDashboardComponent,\r\n    AddLocationComponent,\r\n    AddSlotComponent,\r\n    AllbookingsComponent,\r\n    AddVehicleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [LocationsService, BookingsService, VehicleService, UsersService, SlotsService, AdminService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    email : new FormControl('', [Validators.required, Validators.email]),\r\n    password : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private usersService: UsersService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n     \r\n  onSubmit() {\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    this.usersService.loginCheck(loginJson)\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Login successful\");\r\n        var jsonData = JSON.parse(loginJson);\r\n        this.storeLogin(jsonData['email']);\r\n        this.router.navigate(['/dashboard']);\r\n      }\r\n      else{\r\n        alert(\"Invalid Login\"); \r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem(\"email\", email); \r\n  }\r\n  checkLogin(){\r\n    if (sessionStorage.length != 0){\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<!--<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('email').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('email').errors?.email\">\r\n                                Enter Valid Email Address!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"mt-4\">\r\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Forgot Password ?</button></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Login</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>-->\r\n<div class=\"container\">\r\n    <div class=\"row h-100\">\r\n        <div class=\"row d-flex  align-items-center\">\r\n        <div class=\"col-md-6 my-auto image\">\r\n            <img src=\"https://image.freepik.com/free-vector/cute-boy-standing-position-showing-thumb_96037-450.jpg\" alt=\"Boy on Computer\">\r\n        </div>\r\n        <div class=\"col-md-6 my-auto\">\r\n            <div class = \"container\">\r\n                <div class=\"profile\">\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnhnkpqR8kJoVqpOXDej-weTgEBgeABIe8jw&usqp=CAU\" alt=\"profile\">\r\n                </div>\r\n                <h1 style=\"text-align: center; font-weight: bold;\">WELCOME</h1>\r\n                <div class=\"form\">\r\n                    <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"form.get('email').errors?.required\">\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                    <div *ngIf=\"form.get('email').errors?.email\">\r\n                                        Enter Valid Email Address!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 <input class=\"input form-control\"  formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div class=\"forgot\">\r\n                            <a href=\"#\">Forgot Password?</a>\r\n                        </div>\r\n\r\n                        <div class=\"button\">\r\n                            <button  type=\"submit\" class=\"btn btn-outline-success\"  onsubmit =\"form.valid\">Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    email : new FormControl('', [Validators.required, Validators.email]),\r\n    fullname : new FormControl('', Validators.required),\r\n    mobno : new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required),\r\n    confPassword : new FormControl('',[Validators.required,this.confirmPasswordCheck])\r\n  })\r\n\r\n  constructor(private usersService: UsersService,  public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n  onSubmit(){\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    var x;\r\n    this.usersService.signup(loginJson)\r\n    .subscribe((data => {\r\n      if(data == false){\r\n        alert(\"Signup successful\");\r\n        /* It is to be added If user needs to be autmatic login if signup is succesfull */\r\n        /*var jsonData = JSON.parse(loginJson);\r\n        this.storeLogin(jsonData['email']);*/\r\n        this.router.navigate(['/login']);\r\n        return true;\r\n      }\r\n      else{\r\n        alert(data);\r\n        return ;\r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem(\"email\", email); \r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length != 0){\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  confirmPasswordCheck(control: AbstractControl){\r\n    if (control && control.value !== null || control.value != undefined){\r\n      const cnfPassword = control.value;\r\n      const passControl = control.root.get('password')\r\n\r\n      if (passControl){\r\n        const passValue = passControl.value;\r\n        if (passValue !== cnfPassword){\r\n          return {\r\n            isError: true\r\n          }\r\n        }\r\n      }\r\n    } \r\n    return null\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<!--<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('email').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('email').errors?.email\">\r\n                                Enter Valid Email Address!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Full Name\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Mobile Number\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirm Password\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('confPassword').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('confPassword').errors?.isError\">\r\n                                Password does not match!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"reset\">Reset</button>\r\n                        <button class=\"button\" [disabled]=\"!form.valid\">Sign Up</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n-->\r\n<div class=\"container\">\r\n    <div class=\"row h-100\">\r\n        <div class=\"row d-flex  align-items-center\">\r\n        <div class=\"col-md-6 my-auto image\">\r\n            <img src=\"https://image.freepik.com/free-vector/cute-boy-standing-position-showing-thumb_96037-450.jpg\" alt=\"Boy on Computer\">\r\n        </div>\r\n        <div class=\"col-md-6 my-auto\">\r\n            <div class = \"container\">\r\n                <div class=\"profile\">\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnhnkpqR8kJoVqpOXDej-weTgEBgeABIe8jw&usqp=CAU\" alt=\"profile\">\r\n                </div>\r\n                <h1 style=\"text-align: center; font-weight: bold;\">WELCOME</h1>\r\n                <div class=\"form\">\r\n                    <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"form.get('email').errors?.required\">\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                    <div *ngIf=\"form.get('email').errors?.email\">\r\n                                        Enter Valid Email Address!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- Full Name-->\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Full Name\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Mob num-->\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Mobile Number\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!--password -->\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 \r\n                                    <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 \r\n                                    <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirm Password\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"form.get('confPassword').errors?.required\">\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                        <div *ngIf=\"form.get('confPassword').errors?.isError\">\r\n                                            Password does not match!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button  type=\"reset\" class=\"btn btn-outline-secondary\">Reset</button>\r\n                                    <button  type=\"submit\" class=\"btn btn-outline-success\"  [disabled]=\"!form.valid\" >Sign Up</button>\r\n                                </div>\r\n                            </div>    \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Bookings } from 'src/app/models/bookings.model';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-bookings',\r\n  templateUrl: './bookings.component.html',\r\n  styleUrls: ['./bookings.component.css']\r\n})\r\nexport class BookingsComponent implements OnInit {\r\n\r\n  show: boolean;\r\n  email$ =  sessionStorage.getItem('email');\r\n  bookings$: Bookings[] = [];\r\n\r\n  constructor(private bookingsService: BookingsService, \r\n    public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.checkLogin();\r\n    this.getBookingById();\r\n    \r\n  }\r\n\r\n  getBookingById(){\r\n    return this.bookingsService.getBookings(this.email$)\r\n    .subscribe(data => {this.bookings$ = data, this.checkBookingFn();})\r\n  }\r\n\r\n  endBooking(bookingid){\r\n    return this.bookingsService.endBooking(bookingid)\r\n    .subscribe((data:{}) => {\r\n      alert('Booking Confirmed');\r\n      location.reload();\r\n      this.router.navigate(['dashboard/bookings'])\r\n    })\r\n  }\r\n  checkBookingFn(){\r\n    console.log()\r\n    if (this.bookings$.length == 0){\r\n      this.show = true\r\n    }\r\n    else{\r\n      this.show = false\r\n    }\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card \" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);;color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>My Bookings</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\r\n                        <div class=\"accordion\" id=\"accordionExample\">\r\n                            <div *ngIf='!show'>\r\n                                <div *ngFor='let booking of bookings$'  class=\"card\">\r\n                                    <div class=\"card-header\" id=\"headingTwo\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-3\">\r\n                                                <h3><b>Location :</b> {{booking.locationid}}</h3>\r\n                                            </div>\r\n                                            <div class=\"col-md-7\">\r\n                                                <h3><b>Date :</b> {{booking.time}}</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-auto mr-auto\">\r\n                                                  <b>Show Time : </b> {{booking.slotid}} <br> \r\n                                                  <b>Seating Type :</b> {{booking.vehicle_type}} <br> \r\n                                                  <b>Count :</b> {{booking.duration}}<br> \r\n                                                  <div *ngIf=\"booking.paid != 0 || booking.paid == 0\">\r\n                                                    <b>Cost :</b> {{booking.cost}} Rs\r\n                                                  </div>\r\n                                                </div>\r\n                                                <div class=\"col-auto\" *ngIf='booking.paid == 0'>\r\n                                                  <button class=\"button\" (click) = 'endBooking(booking.bookingid)'>Confirm</button>\r\n                                                </div>\r\n                                                <div class=\"col-auto\" *ngIf='booking.paid != 0'>\r\n                                                    <p class=\"text-success font-weight-bold\">Booking Completed</p>\r\n                                                  </div>\r\n                                            </div>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                            <div *ngIf='show'>\r\n                                <h2>\r\n                                    No Bookings Found...\r\n                                </h2>\r\n                                <button class=\"button\" routerLink='/dashboard' > Book Now</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, Input, Directive, HostListener } from '@angular/core';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { SlotsService } from 'src/app/services/slots.service';\r\nimport { Slots } from 'src/app/models/slots.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-bookslot',\r\n  templateUrl: './bookslot.component.html',\r\n  styleUrls: ['./bookslot.component.css']\r\n})\r\nexport class BookslotComponent implements OnInit {\r\n\r\n    load : boolean;\r\n    vehicles$: Vehicle[];\r\n    slots$: Slots[];\r\n    locationid = this.actRoute.snapshot.params['locationid'];\r\n    //bannerimage = this.actRoute.snapshot.params['bannerimage'];\r\n    //locationname = this.actRoute.snapshot.params['location_image'];\r\n    currentDate = new Date();\r\n    date = this.currentDate.getDate() + '-' + this.currentDate.getMonth() + '-' + this.currentDate.getFullYear()\r\n    \r\n  @Input() bookingdetails = {\r\n    'email':'',\r\n    'locationid':'',\r\n    'vehicle_type':'',\r\n    'duration':0,\r\n    'time':'',\r\n    'slotid':'',\r\n    'date': '',\r\n    'vehicle_no':'',\r\n  }\r\n  constructor(\r\n    private bookings:BookingsService, \r\n    private slotsService: SlotsService, \r\n    private vehicleService: VehicleService, \r\n    public actRoute :ActivatedRoute, \r\n    public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.load = false;\r\n    this.getVehicles();\r\n    this.getSlotById();\r\n  }\r\n\r\n  getVehicles(){\r\n    return this.vehicleService.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data)\r\n  }\r\n  getSlotById(){\r\n    return this.slotsService.getSlotById(this.locationid)\r\n    .subscribe(data => this.slots$ = data)\r\n  }\r\n\r\n  addBooking(){\r\n    if(this.bookingdetails.vehicle_type == '' || this.bookingdetails.slotid == '' || this.bookingdetails.duration == 0){\r\n      alert('Kindly fill all the data')\r\n      return\r\n    } \r\n    /*if (!this.checkTime(this.bookingdetails.time)){\r\n      alert(\"OOPS!! Try booking 2 hours earlier..\")\r\n      return\r\n    }*/\r\n    this.load = true;\r\n    this.bookings.addBooking(this.locationid, this.bookingdetails)\r\n    .subscribe((data:{}) => {\r\n      alert('Show Booked');\r\n      this.router.navigate(['/dashboard/bookings'])\r\n    })\r\n  }\r\n  /*checkTime(bookingTime){\r\n\r\n  var currentTime = new Date();\r\n  \r\n  var ISTTime = new Date(currentTime.getTime() + (330 + currentTime.getTimezoneOffset())*60000)\r\n  ISTTime.setHours(ISTTime.getHours()+2)\r\n  \r\n  var time = bookingTime.split(':')\r\n  var h = parseInt(time[0])\r\n  var m = parseInt(time[1])\r\n  if (h<ISTTime.getHours() || (h == ISTTime.getHours() && m < ISTTime.getMinutes())){\r\n      return false\r\n  }\r\n    return true;\r\n  }*/\r\n}\r\n","<div class=\"row mt-3 justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);;color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Book Ticket</h2>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"load\" class=\"d-flex justify-content-center\">\r\n            <div class=\"loadingio-spinner-pulse-f18fi8swilg\"><div class=\"ldio-letfb25733\">\r\n                <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <h4>ID: {{locationid}}</h4>\r\n                        <form class=\"card\" name=\"bookingForm\">\r\n                            <!-- select vehicle    -->\r\n                            \r\n                            <!-- end vechicle select -->\r\n\r\n                            <!-- vehicle number enter -->\r\n                            <!--<div class=\"col-md-12 m-2\">\r\n                                    <input class=\"input\" type=\"text\" [(ngModel)]=\"bookingdetails.vehicle_no\" name=\"vehicle_no\" placeholder=\"Vehicle Number\" autocomplete=\"off\" required>\r\n\r\n                                    <small>FORMAT: TN-01-AA-1111</small>\r\n                            </div>-->\r\n                            <!-- end vehicle number -->\r\n\r\n                            <!-- select date and time [(ngModel)]=\"bookingdetails.time\" -->\r\n                            <div class=\"col-md-12 mt-2 mb-3\">\r\n                                <div class=\"row m-2\">\r\n                                    <div>\r\n                                        Select Date : <input type=\"date\" id=\"time\" min=\"27\" max=\"2026-03-24\" [(ngModel)]=\"bookingdetails.time\" name=\"time\">\r\n                                        <!--<br>\r\n                                        <small>NOTE: Book 2 hours earlier</small>-->\r\n                                    </div>            \r\n                                </div>\r\n                            </div>\r\n                            <!-- end date and time -->\r\n                             <!-- select slot    -->\r\n                             <div class=\"col-md-12\">\r\n                                <h4 class=\"m-2\">Select Show</h4>\r\n                                <div class=\"row border \">\r\n                                    <div class=\"col-2 m-1 pt-3 pb-0\"  *ngFor=\"let slot of slots$\" >   \r\n                                        <!--<div  *ngIf=\"slot.status != 0;\" >\r\n                                            \r\n                                            <input type=\"radio\" disabled [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"slotid\" value=\"{{slot.slotid }}\">\r\n                                            <label  id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label> \r\n                                            <small class=\"text-danger\">Already Booked!</small>\r\n                                          \r\n                                        </div>-->    \r\n                                        <div>\r\n                                            <input type=\"radio\"  [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"disabled\" value=\"{{slot.slotid }}\">\r\n                                            <label id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label><br>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- end slot select-->\r\n                              \r\n                            <!-- enter hours    -->\r\n                            <div class=\"col-md-12 mb-3 ml-2\">\r\n                                <p>Enter the Number of Tickets : </p>\r\n                                <input class=\"input mt-0\" name=\"duration\" id=\"duration\" type=\"number\" min=\"1\" max=\"24\" [(ngModel)]=\"bookingdetails.duration\" id=\"duration\" placeholder=\"No Of Tickets\" autocomplete=\"off\"  required>\r\n                            </div>\r\n                            <!-- end hours    -->\r\n                            <div class=\"seater\">\r\n                                <ul class=\"showcase\">\r\n                                    <li>\r\n                                      <div class=\"seat\"></div>\r\n                                      <small>N/A</small>\r\n                                    </li>\r\n                                    <li>\r\n                                      <div class=\"seat selected\"></div>\r\n                                      <small>Selected</small>\r\n                                    </li>\r\n                                    <li>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <small>Occupied</small>\r\n                                    </li>\r\n                                  </ul>\r\n                              \r\n                                  <div class=\"container\">\r\n                                    <div class=\"screen\"></div>\r\n                              <div class=\"seating\">\r\n                            \r\n                             \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                  <!--<p class=\"text\">\r\n                                    You have selected <span id=\"count\">0</span> seats for a price of $<span\r\n                                      id=\"price\"\r\n                                      >0</span\r\n                                    >\r\n                                  </p>-->\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col-md-12 m-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"vehicle_type\">Select Seating</label>\r\n                                    <select class=\"form-control\"  [(ngModel)]=\"bookingdetails.vehicle_type\" name=\"vehicle_type\" id=\"vehicle_type\">\r\n                                            <option *ngFor='let vehicle of vehicles$' value=\"{{vehicle.vehicle_type}}\">{{vehicle.vehicle_type}}</option>                                  \r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <!-- book button    -->\r\n                            <div class=\"col-md-12 mt-3 mb-5\">\r\n                                <div class=\"m-1 mt-2\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-2\">\r\n                                            <input type=\"reset\" class=\"button\" value=\"Reset\">\r\n                                        </div>\r\n                                        <div class=\"col\">\r\n                                            <button class=\"button\"  (click)='addBooking()'>Book Show</button>\r\n                                        </div>\r\n                                    </div>                                    \r\n                                </div>\r\n                            </div>\r\n                            <!-- end book button -->\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n}\r\n","<app-header-login></app-header-login>\r\n<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\r\n        <div>\r\n            <button routerLink=\"/dashboard\" class=\"button\">Available Movies</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/dashboard/bookings\" class=\"button\">My Bookings</button>\r\n        </div>\r\n        <!-- <div>\r\n            <button routerLink=\"/dashboard/bookslot\" class=\"button\">Book Slot</button>\r\n        </div> -->\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Locations } from '../../models/locations.model';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\nimport { DashboardComponent } from 'src/app/dashboard/dashboard.component';\r\n\r\n@Component({\r\n  selector: 'app-slots',\r\n  templateUrl: './slots.component.html',\r\n  styleUrls: ['./slots.component.css']\r\n})\r\nexport class SlotsComponent implements OnInit {\r\n\r\n  locations$: Locations[];\r\n  vehicles$: Vehicle[];\r\n  sessionValue : string = \"\";\r\n  slotService: any;\r\n\r\n  constructor(\r\n    private locationsService: LocationsService,\r\n    private vehicleService: VehicleService,\r\n    private dashboardComponent: DashboardComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardComponent.checkLogin();\r\n    this.loadLocations();\r\n    this.loadVehicle();\r\n  }\r\n\r\n\r\n  loadLocations(){\r\n    return this.locationsService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n\r\n  loadVehicle(){\r\n    return this.vehicleService.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n  <div class=\"col-md-11 card\" >\r\n    <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: Black;margin: 10px;padding: 10px;\">\r\n      <div class=\"col-md-12 d-flex justify-content-center\" >\r\n        <h2>Movies</h2>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row mb-3\">\r\n          <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\r\n            <div>\r\n              <div *ngFor='let location of locations$' class=\"card\">\r\n                <div class=\"card-header flex-row\" >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                      <h2><b>{{location.location_name}}</b></h2>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <button class=\"button\" type=\"button\" routerLink=\"/dashboard/bookslot/{{location.locationid}}\">\r\n                        Book Now\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>             \r\n                <div>\r\n                  <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-7 mr-auto\">\r\n                        <h4><b> Location :</b></h4> <p>{{location.area}}</p>\r\n                        <hr>\r\n                        <h4><b> About : </b></h4> <p>{{location.cast}}</p>\r\n                        <div class=\"col-md-7 mr-auto\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-auto mr-auto\">\r\n                        <br><h3><b>Shows :</b> {{location.slots}}</h3>\r\n                        <br><h4><b> Seatings :  </b></h4>\r\n                        <div *ngFor='let vehicle of vehicles$'>\r\n                          <p>{{vehicle.vehicle_type}} : Rs {{vehicle.cost}}</p>\r\n                        </div>\r\n                      </div>\r\n                      <br>\r\n                      <div class=\"col-auto\">\r\n                        <div class=\"col-auto\">\r\n                          <img src=\"{{location.bannerimage}}\" width=\"163px\" height=\"208px\"alt=\"error\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header-login',\r\n  templateUrl: './header-login.component.html',\r\n  styleUrls: ['./header-login.component.css']\r\n})\r\nexport class HeaderLoginComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logout(){\r\n    sessionStorage.clear();\r\n    console.log(sessionStorage);\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #2089E4 !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\r\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:white;\"><i class=\"fas fa-film\" style=\"color: white;font-size: 30px;\"></i><b>My-Movies</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n      </ul>\r\n      <div class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"button\" routerLink=\"/\">Home</button>\r\n        <button class=\"button\" (click)='logout()'>Logout</button>\r\n      </div>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #2089E4 !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\r\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:white;\"><i class=\"fas fa-film\" style=\"color: white;font-size: 30px;\"></i><b>My-Movies</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n      </ul>\r\n      <div class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"button\" routerLink=\"/\">Home</button>\r\n        <button class=\"button\" routerLink=\"/signup\">Sign up</button>\r\n        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n      </div>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-main-section',\r\n  templateUrl: './home-main-section.component.html',\r\n  styleUrls: ['./home-main-section.component.css']\r\n})\r\nexport class HomeMainSectionComponent implements OnInit {\r\n\r\n  constructor(private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  checkSession(){\r\n    if (sessionStorage.length == 0){\r\n      \r\n      this.router.navigate(['/login'])\r\n    }\r\n    else{\r\n      this.router.navigate(['/dashboard'])\r\n    }\r\n  }\r\n}\r\n","<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\r\n    <div class=\"col-md-6 d-flex justify-content-center p-0 align-items-center flex-column\">\r\n        <h1><b>Waiting to See your Hero on Screen ?</b></h1>\r\n        <h2>Just Make it By an Click !!</h2>\r\n        <br>\r\n        <div class=\"\">\r\n            <!-- <input class=\"getquote\" type=\"text\" placeholder=\"Parking Slot\"> -->\r\n            <button class=\"getquotebtn btn-warning\"(click)='checkSession()' >Book Now</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n        <div>\r\n            <!--https://thumbs.dreamstime.com/b/concept-booking-movie-ticket-men-women-buy-online-application-mobile-phone-tablet-laptop-devices-isometric-d-flat-188578887.jpg-->\r\n            <img  src=\"https://vectorified.com/image/cinema-ticket-vector-10.jpg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<br><br><br>\r\n<div class=\"row\">\r\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"far fa-money-bill-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Economical</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-history\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Fast</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-user-shield\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Easy Booking</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-calendar-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>24/7</p>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\r\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n        <div>\r\n            <img  src=\"https://thumbs.dreamstime.com/b/concept-booking-movie-ticket-men-women-buy-online-application-mobile-phone-tablet-laptop-devices-isometric-d-flat-188578887.jpg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-center flex-column\">\r\n        <h1><b>How It Works?</b></h1>\r\n        <h4>You can easily choose from any tickets you like without going to the actual theatre for cinema ticket booking. You can sit back at home and book in advance whenever the movie tickets booking starts according to your own convenience.<br>\r\n        </h4>\r\n        <br>\r\n        <div>\r\n            <button class=\"getquotebtn\" (click)='checkSession()'>Book Now</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  show: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.checklogin();\r\n  }\r\n  checklogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.show = true\r\n    }\r\n    else{\r\n      this.show = false\r\n    }\r\n  }\r\n}\r\n","<app-header *ngIf=\"show\"></app-header>\r\n<app-header-login *ngIf=\"!show\"></app-header-login>\r\n<app-home-main-section></app-home-main-section>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  apiUrl = 'http://localhost:8080/admin';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  loginCheck(loginDetails){\r\n    return this._http.post<Boolean>(this.apiUrl,loginDetails, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Bookings } from '../models/bookings.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingsService {\r\n\r\n  apiUrl = 'http://localhost:8080'\r\n  \r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAllBookings(){\r\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/allBookings')\r\n  }\r\n\r\n  getBookings(email){\r\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/getByUser/'+email);\r\n  }\r\n\r\n  addBooking(id,bookings):Observable<Bookings>{\r\n    bookings.locationid = id;\r\n    bookings.email = sessionStorage.getItem('email');\r\n    console.log(bookings);\r\n    return this._http.post<Bookings>(this.apiUrl+'/bookings/add', JSON.stringify(bookings), this.httpOptions ); \r\n  }\r\n\r\n  endBooking(bookingid){\r\n    return this._http.get<Boolean>(this.apiUrl+'/bookings/endBooking/'+bookingid);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Locations } from '../models/locations.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationsService {\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  apiUrl = 'http://localhost:8080/locations';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getLocations(){\r\n    return this._http.get<Locations[]>(this.apiUrl);\r\n  }\r\n\r\n  addLocation(location){\r\n    return this._http.post<Boolean>(this.apiUrl+'/add', location, this.httpOptions ); \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Slots } from '../models/slots.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SlotsService {\r\n\r\n  apiUrl = 'http://localhost:8080'\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getSlotById(locationid){\r\n    return this._http.get<Slots[]>(this.apiUrl+'/slots/getbyid/'+locationid);\r\n  }\r\n  getAllSlots(){\r\n    return this._http.get<Slots[]>(this.apiUrl+'/slots');\r\n  }\r\n  addSlot(slot){\r\n    return this._http.post<Boolean>(this.apiUrl+'/slots/add', slot, this.httpOptions ); \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Users } from 'src/app/models/users.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  apiUrl = 'http://localhost:8080/users';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  loginCheck(loginDetails){\r\n    return this._http.post<Boolean>(this.apiUrl+'/login',loginDetails, this.httpOptions);\r\n  }\r\n\r\n  signup(signupDetails){\r\n    return this._http.post<Boolean>(this.apiUrl+'/signup',signupDetails, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Vehicle } from '../models/vehicle.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehicleService {\r\n\r\n  apiUrl = 'http://localhost:8080/vehicle';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getVehicles(){\r\n    return this._http.get<Vehicle[]>(this.apiUrl);\r\n  }\r\n\r\n  addVehicle(vehicle){\r\n    return this._http.post<Vehicle>(this.apiUrl+'/add', vehicle, this.httpOptions)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}