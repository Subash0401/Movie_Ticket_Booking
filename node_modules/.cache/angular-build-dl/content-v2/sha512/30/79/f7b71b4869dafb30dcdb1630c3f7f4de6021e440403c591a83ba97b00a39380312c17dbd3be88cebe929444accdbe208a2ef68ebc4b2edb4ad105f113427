{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-dashboard/add-location/add-location.component.ts","webpack:///src/app/admin/admin-dashboard/add-location/add-location.component.html","webpack:///src/app/admin/admin-dashboard/add-slot/add-slot.component.ts","webpack:///src/app/admin/admin-dashboard/add-slot/add-slot.component.html","webpack:///src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.ts","webpack:///src/app/admin/admin-dashboard/add-vehicle/add-vehicle.component.html","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/admin/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/admin/admin-dashboard/allbookings/allbookings.component.ts","webpack:///src/app/admin/admin-dashboard/allbookings/allbookings.component.html","webpack:///src/app/admin/admin-login/admin-login.component.ts","webpack:///src/app/admin/admin-login/admin-login.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/dashboard/bookings/bookings.component.ts","webpack:///src/app/dashboard/bookings/bookings.component.html","webpack:///src/app/dashboard/bookslot/bookslot.component.ts","webpack:///src/app/dashboard/bookslot/bookslot.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/slots/slots.component.ts","webpack:///src/app/dashboard/slots/slots.component.html","webpack:///src/app/header-login/header-login.component.ts","webpack:///src/app/header-login/header-login.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home-main-section/home-main-section.component.ts","webpack:///src/app/home-main-section/home-main-section.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/admin.service.ts","webpack:///src/app/services/bookings.service.ts","webpack:///src/app/services/locations.service.ts","webpack:///src/app/services/slots.service.ts","webpack:///src/app/services/users.service.ts","webpack:///src/app/services/vehicle.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddLocationComponent","locationService","form","location_name","required","area","cast","bannerimage","loadLocations","addLocation","JSON","stringify","value","subscribe","data","alert","getLocations","locations$","onSubmit","selector","templateUrl","styleUrls","AddSlotComponent","slotService","locationid","slotid","slotno","getAllSlots","addSlot","slots$","AddVehicleComponent","vehicleservice","vehicle_type","cost","loadVehicle","getVehicles","vehicles$","addVehicle","console","log","location","reload","AdminDashboardComponent","route","checkLogin","sessionStorage","clear","navigate","length","logout","AllbookingsComponent","bookingsService","getAllBookings","AllBookings$","AdminLoginComponent","adminService","adminid","password","loginJson","loginCheck","jsonData","parse","storeLogin","email","setItem","AdminComponent","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","LoginComponent","usersService","router","SignupComponent","fullname","mobno","confPassword","confirmPasswordCheck","x","signup","control","undefined","cnfPassword","passControl","root","get","passValue","isError","BookingsComponent","email$","getItem","bookings$","getBookingById","getBookings","checkBookingFn","bookingid","endBooking","show","BookslotComponent","bookings","slotsService","vehicleService","actRoute","snapshot","params","currentDate","Date","date","getDate","getMonth","getFullYear","bookingdetails","load","getSlotById","duration","addBooking","DashboardComponent","SlotsComponent","locationsService","dashboardComponent","sessionValue","HeaderLoginComponent","HeaderComponent","HomeMainSectionComponent","checkSession","HomeComponent","checklogin","AdminService","_http","apiUrl","httpOptions","headers","loginDetails","post","providedIn","BookingsService","LocationsService","SlotsService","slot","UsersService","signupDetails","VehicleService","vehicle","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Locations } from 'src/app/models/locations.model';\r\n\r\n@Component({\r\n  selector: 'app-add-location',\r\n  templateUrl: './add-location.component.html',\r\n  styleUrls: ['./add-location.component.css']\r\n})\r\nexport class AddLocationComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    location_name : new FormControl('', Validators.required),\r\n    area : new FormControl('', Validators.required),\r\n    cast : new FormControl('', Validators.required),\r\n    bannerimage : new FormControl('', Validators.required)\r\n  })\r\n  \r\n  constructor(private locationService: LocationsService) { }\r\n\r\n  locations$ : Locations[];\r\n\r\n  ngOnInit(): void {\r\n    this.loadLocations();\r\n  }\r\n\r\n   onSubmit(){\r\n    this.locationService.addLocation(JSON.stringify(this.form.value))\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Movie Added\")\r\n      }\r\n      else{\r\n        alert('Something went wrong')\r\n      }\r\n    }))\r\n   }\r\n\r\n   loadLocations(){\r\n    return this.locationService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Movie</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"location_name\" [ngClass]=\"{ 'is-invalid':form.get('location_name').touched && form.get('location_name').invalid}\" name=\"location_name\" type=\"text\" placeholder=\"Movie Name\"  autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"area\" [ngClass]=\"{ 'is-invalid':form.get('area').touched && form.get('area').invalid}\" name=\"area\" type=\"text\" placeholder=\"Theatre Name\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"cast\" [ngClass]=\"{ 'is-invalid':form.get('cast').touched && form.get('cast').invalid}\" name=\"area\" type=\"text\" placeholder=\"About the Movie and Cast\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"bannerimage\" [ngClass]=\"{ 'is-invalid':form.get('bannerimage').touched && form.get('bannerimage').invalid}\" name=\"bannerimage\" type=\"text\" placeholder=\"Paste the Poster Image URL\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-5 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Movies Available:</h3>\r\n                        </div>\r\n                        \r\n                        <div class=\"card m-2\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col\">\r\n                                    <b>Movie</b>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                   <b>Theatre</b>\r\n                                </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let location of locations$'>\r\n                                <div class=\"col\" >\r\n                                    {{location.location_name}}\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    {{location.area}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SlotsService } from 'src/app/services/slots.service';\r\nimport { Slots } from 'src/app/models/slots.model';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Locations } from 'src/app/models/locations.model';\r\n\r\n@Component({\r\n  selector: 'app-add-slot',\r\n  templateUrl: './add-slot.component.html',\r\n  styleUrls: ['./add-slot.component.css']\r\n})\r\nexport class AddSlotComponent implements OnInit {\r\n  \r\n  slots$: Slots[];\r\n  locations$: Locations[];\r\n  form = new FormGroup({\r\n    locationid : new FormControl('', Validators.required),\r\n    slotid : new FormControl('', Validators.required),\r\n    slotno : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private slotService: SlotsService, private locationService : LocationsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllSlots();\r\n    this.loadLocations();\r\n  }\r\n  onSubmit(){\r\n    this.slotService.addSlot(JSON.stringify(this.form.value))\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Show Added\")\r\n      }\r\n      else{\r\n        alert('Something went wrong')\r\n      }\r\n    }))\r\n  }\r\n\r\n  getAllSlots(){\r\n    this.slotService.getAllSlots()\r\n    .subscribe(data => this.slots$ = data)\r\n  }\r\n\r\n  loadLocations(){\r\n    return this.locationService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Shows</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <div class=\"form-group\">\r\n                                        <label ><h3 class=\"font-weight-bold m-0\">Select Movie:</h3></label>\r\n                                        <select class=\"form-control\" formControlName=\"locationid\" [ngClass]=\"{ 'is-invalid':form.get('locationid').touched && form.get('locationid').invalid}\" name=\"locationid\">\r\n                                          <option *ngFor='let location of locations$' value=\"{{location.locationid}}\">{{location.locationid}}. {{location.location_name}}</option>\r\n                                        </select>                                    \r\n                                        <div class=\"invalid-feedback\">\r\n                                            <div>\r\n                                                This Field is required!!\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"slotid\" [ngClass]=\"{ 'is-invalid':form.get('slotid').touched && form.get('slotid').invalid}\" name=\"slotid\" type=\"text\" placeholder=\"Show ID\"  autocomplete=\"off\" required>\r\n                                    <!--<small>Format: showid + show + show no</small>-->\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"slotno\" [ngClass]=\"{ 'is-invalid':form.get('slotno').touched && form.get('slotno').invalid}\" name=\"slotno\" type=\"text\" placeholder=\"Show Time\" required>\r\n                                    <!--<small>Format: Slot + slotno</small>-->\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-2 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Shows Available:</h3>\r\n                        </div>\r\n                        <div class=\"card m-2 slots\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col-2\">\r\n                                    <b>Movie ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                   <b>Show ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <b>Show Time</b>\r\n                                 </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let slot of slots$'>\r\n                                <div class=\"col-2\" >\r\n                                    {{slot.locationid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{slot.slotid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{slot.slotno}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\n\r\n@Component({\r\n  selector: 'app-add-vehicle',\r\n  templateUrl: './add-vehicle.component.html',\r\n  styleUrls: ['./add-vehicle.component.css']\r\n})\r\nexport class AddVehicleComponent implements OnInit {\r\n\r\n  vehicles$ : Vehicle[];\r\n  form = new FormGroup({\r\n    vehicle_type : new FormControl('', Validators.required),\r\n    cost : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private vehicleservice : VehicleService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadVehicle();\r\n  }\r\n\r\n  loadVehicle(){\r\n    this.vehicleservice.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data) \r\n  }\r\n\r\n  onSubmit(){\r\n    this.vehicleservice.addVehicle(JSON.stringify(this.form.value))\r\n    .subscribe(data => console.log(data))\r\n    alert('Seating Added')\r\n    location.reload();\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Add Seating</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\" class=\"card m-2\">\r\n\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"vehicle_type\" [ngClass]=\"{ 'is-invalid':form.get('vehicle_type').touched && form.get('vehicle_type').invalid}\" name=\"vehicle_type\" type=\"text\" placeholder=\"Seating Type\"  autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                            </div>\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"m-1\">\r\n                                    <input class=\"input form-control\" formControlName=\"cost\" [ngClass]=\"{ 'is-invalid':form.get('cost').touched && form.get('cost').invalid}\" name=\"cost\" type=\"text\" placeholder=\"Price\" autocomplete=\"off\" required>\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-2 \">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Add</button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        <hr>\r\n                        <div class=\"m-2\">\r\n                            <h3 class=\"font-weight-bold\">Seatings Available:</h3>\r\n                        </div>\r\n                        <div class=\"card m-2 slots\">\r\n                            <div class=\"row p-2\">\r\n                                <div class=\"col-2\">\r\n                                    <b>Seating ID</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                   <b>Seating Type</b>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <b>Price</b>\r\n                                 </div>\r\n                            </div>\r\n                            <hr class=\"m-1\">\r\n                            <div class=\"row p-2\" *ngFor='let vehicle of vehicles$'>\r\n                                <div class=\"col-2\" >\r\n                                    {{vehicle.vehicleid}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{vehicle.vehicle_type}}\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    {{vehicle.cost}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n\r\n  logout(){\r\n    sessionStorage.clear()\r\n    this.route.navigate(['admin'])\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.route.navigate(['admin'])\r\n    }\r\n  }\r\n}\r\n","<!-- <app-header-login></app-header-login> -->\r\n<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard\" class=\"button\">Add Movies</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/add-slot\" class=\"button\">Add Shows</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/add-vehicle\" class=\"button\">Add Seating</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/admin-dashboard/allbookings\" class=\"button\">All Bookings</button>\r\n        </div>\r\n        <div>\r\n            <button (click)=\"logout()\" class=\"button\">Logout</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Bookings } from 'src/app/models/bookings.model';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\n\r\n@Component({\r\n  selector: 'app-allbookings',\r\n  templateUrl: './allbookings.component.html',\r\n  styleUrls: ['./allbookings.component.css']\r\n})\r\nexport class AllbookingsComponent implements OnInit {\r\n\r\n  AllBookings$ : Bookings[];\r\n\r\n  constructor(private bookingsService : BookingsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllBookings();\r\n  }\r\n\r\n  getAllBookings(){\r\n    return this.bookingsService.getAllBookings()\r\n    .subscribe(data => this.AllBookings$ = data)\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>All Bookings</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead\">\r\n                      <tr>\r\n                        <th scope=\"col\">Booking ID</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Seating</th>\r\n                        <!--<th scope=\"col\">Vehicle No</th>-->\r\n                        <!--<th scope=\"col\">Date</th>-->\r\n                        <th scope=\"col\">Date</th>\r\n                        <th scope=\"col\">Count</th>\r\n                        <th scope=\"col\">Cost</th>\r\n                        <th scope=\"col\">Location ID</th>\r\n                        <th scope=\"col\">Slot ID</th>\r\n                        <th scope=\"col\">Status</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                      <tr *ngFor='let booking of AllBookings$'>\r\n                        <th scope=\"row\">{{booking.bookingid}}</th>\r\n                        <td>{{booking.email}}</td>\r\n                        <td>{{booking.vehicle_type}}</td>\r\n                        <!--<td>{{booking.vehicle_no}}</td>-->\r\n                        <!--<td>{{booking.date}}</td>-->\r\n                        <td>{{booking.time}}</td>\r\n                        <td>{{booking.duration}}</td>\r\n                        <td>{{booking.cost}}</td>\r\n                        <td>{{booking.locationid}}</td>\r\n                        <td>{{booking.slotid}}</td>\r\n                        <div *ngIf='booking.paid == 1'>\r\n                          <td class=\"text-success\">Confirmed</td>\r\n                        </div>\r\n                        <div *ngIf='booking.paid == 0'>\r\n                          <td class=\"text-danger\">Pending</td>\r\n                        </div>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminService } from 'src/app/services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    adminid : new FormControl('', Validators.required),\r\n    password : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private route : Router, private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  onSubmit() {\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    this.adminService.loginCheck(loginJson)\r\n    .subscribe((data => {\r\n      if(data == true){\r\n      alert(\"Login successful\");\r\n      var jsonData = JSON.parse(loginJson);\r\n      this.storeLogin(jsonData['email']);\r\n      this.route.navigate(['/admin-dashboard']);\r\n      \r\n      }\r\n      else{\r\n        alert(\"Invalid Login\"); \r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem('admin',email);\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <!-- <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button> -->\r\n                        <h2>Admin Login</h2> \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"adminid\" [ngClass]=\"{ 'is-invalid':form.get('adminid').touched && form.get('adminid').invalid}\" name=\"adminid\" type=\"email\" placeholder=\"Admin ID\" autocomplete=\"off\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('adminid').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"mt-4\">\r\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Forgot Password ?</button></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\" >Login</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { SlotsComponent } from './dashboard/slots/slots.component';\r\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\r\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\r\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\r\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\r\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\r\n\r\nconst routes: Routes = [\r\n  {path:'',component:HomeComponent},\r\n  {path:'login',component:LoginComponent},\r\n  {path:'signup',component:SignupComponent},\r\n  {path:'dashboard',component:DashboardComponent,\r\n  children:[\r\n    {path:'',component:SlotsComponent},\r\n    {path:'bookings',component:BookingsComponent},\r\n    {path:'bookslot/:locationid',component:BookslotComponent}\r\n  ]},\r\n  {path:'admin',component: AdminComponent,\r\n  children:[\r\n    {path:'',component:AdminLoginComponent}\r\n  ]},\r\n  {path:'admin-dashboard',component: AdminDashboardComponent,\r\n  children:[\r\n    {path:'',component: AddLocationComponent},\r\n    {path:'add-slot', component: AddSlotComponent},\r\n    {path:'allbookings', component: AllbookingsComponent},\r\n    {path: 'add-vehicle', component: AddVehicleComponent}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'car-parking';\r\n\r\n}\r\n\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeMainSectionComponent } from './home-main-section/home-main-section.component';\r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { LoginComponent } from './auth/login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SlotsComponent } from './dashboard/slots/slots.component';\r\nimport { BookingsComponent } from './dashboard/bookings/bookings.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { BookslotComponent } from './dashboard/bookslot/bookslot.component';\r\n\r\nimport { AdminService} from './services/admin.service';\r\nimport { LocationsService } from './services/locations.service';\r\nimport { BookingsService } from './services/bookings.service';\r\nimport { VehicleService } from './services/vehicle.service';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderLoginComponent } from './header-login/header-login.component';\r\nimport { UsersService } from './services/users.service';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { AddLocationComponent } from './admin/admin-dashboard/add-location/add-location.component';\r\nimport { AddSlotComponent } from './admin/admin-dashboard/add-slot/add-slot.component';\r\nimport { AllbookingsComponent } from './admin/admin-dashboard/allbookings/allbookings.component';\r\nimport { SlotsService } from './services/slots.service';\r\nimport { AddVehicleComponent } from './admin/admin-dashboard/add-vehicle/add-vehicle.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeMainSectionComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    SlotsComponent,\r\n    BookingsComponent,\r\n    DashboardComponent,\r\n    BookslotComponent,\r\n    HeaderLoginComponent,\r\n    AdminComponent,\r\n    AdminLoginComponent,\r\n    AdminDashboardComponent,\r\n    AddLocationComponent,\r\n    AddSlotComponent,\r\n    AllbookingsComponent,\r\n    AddVehicleComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [LocationsService, BookingsService, VehicleService, UsersService, SlotsService, AdminService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    email : new FormControl('', [Validators.required, Validators.email]),\r\n    password : new FormControl('', Validators.required)\r\n  })\r\n  constructor(private usersService: UsersService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n     \r\n  onSubmit() {\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    this.usersService.loginCheck(loginJson)\r\n    .subscribe((data => {\r\n      if(data == true){\r\n        alert(\"Login successful\");\r\n        var jsonData = JSON.parse(loginJson);\r\n        this.storeLogin(jsonData['email']);\r\n        this.router.navigate(['/dashboard']);\r\n      }\r\n      else{\r\n        alert(\"Invalid Login\"); \r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem(\"email\", email); \r\n  }\r\n  checkLogin(){\r\n    if (sessionStorage.length != 0){\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<!--<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('email').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('email').errors?.email\">\r\n                                Enter Valid Email Address!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"mt-4\">\r\n                        <p class=\"danger\"><button style=\"border:none;background-color: transparent;color: #ff4f5a;\">Forgot Password ?</button></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"submit\" [disabled]=\"!form.valid\">Login</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>-->\r\n<div class=\"container\">\r\n    <div class=\"row h-100\">\r\n        <div class=\"row d-flex  align-items-center\">\r\n        <div class=\"col-md-6 my-auto image\">\r\n            <img src=\"https://image.freepik.com/free-vector/cute-boy-standing-position-showing-thumb_96037-450.jpg\" alt=\"Boy on Computer\">\r\n        </div>\r\n        <div class=\"col-md-6 my-auto\">\r\n            <div class = \"container\">\r\n                <div class=\"profile\">\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnhnkpqR8kJoVqpOXDej-weTgEBgeABIe8jw&usqp=CAU\" alt=\"profile\">\r\n                </div>\r\n                <h1 style=\"text-align: center; font-weight: bold;\">WELCOME</h1>\r\n                <div class=\"form\">\r\n                    <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" name=\"email\" type=\"email\" placeholder=\"Email\" autocomplete=\"off\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"form.get('email').errors?.required\">\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                    <div *ngIf=\"form.get('email').errors?.email\">\r\n                                        Enter Valid Email Address!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 <input class=\"input form-control\"  formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        <div class=\"forgot\">\r\n                            <a href=\"#\">Forgot Password?</a>\r\n                        </div>\r\n\r\n                        <div class=\"button\">\r\n                            <button  type=\"submit\" class=\"btn btn-outline-success\"  onsubmit =\"form.valid\">Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, AbstractControl } from '@angular/forms';\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n    email : new FormControl('', [Validators.required, Validators.email]),\r\n    fullname : new FormControl('', Validators.required),\r\n    mobno : new FormControl('', Validators.required),\r\n    password: new FormControl('', Validators.required),\r\n    confPassword : new FormControl('',[Validators.required,this.confirmPasswordCheck])\r\n  })\r\n\r\n  constructor(private usersService: UsersService,  public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n  onSubmit(){\r\n    var loginJson = JSON.stringify(this.form.value);\r\n    var x;\r\n    this.usersService.signup(loginJson)\r\n    .subscribe((data => {\r\n      if(data == false){\r\n        alert(\"Signup successful\");\r\n        /* It is to be added If user needs to be autmatic login if signup is succesfull */\r\n        /*var jsonData = JSON.parse(loginJson);\r\n        this.storeLogin(jsonData['email']);*/\r\n        this.router.navigate(['/login']);\r\n        return true;\r\n      }\r\n      else{\r\n        alert(data);\r\n        return ;\r\n      }\r\n    }))\r\n  }\r\n\r\n  storeLogin(email){\r\n    sessionStorage.setItem(\"email\", email); \r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length != 0){\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  confirmPasswordCheck(control: AbstractControl){\r\n    if (control && control.value !== null || control.value != undefined){\r\n      const cnfPassword = control.value;\r\n      const passControl = control.root.get('password')\r\n\r\n      if (passControl){\r\n        const passValue = passControl.value;\r\n        if (passValue !== cnfPassword){\r\n          return {\r\n            isError: true\r\n          }\r\n        }\r\n      }\r\n    } \r\n    return null\r\n  }\r\n\r\n}\r\n","<app-header></app-header>\r\n<!--<div class=\"row\">\r\n    <div class=\"col-md-12 wrapper d-flex justify-content-center align-items-center\" style=\"height:95vh\">\r\n        <div class=\"row d-flex justify-content-center align-items-center formwrapper card\">\r\n            <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                <div class=\"col-md-12 mt-4 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <button class=\"button\" routerLink=\"/signup\">Sign Up </button>\r\n                        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('email').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('email').errors?.email\">\r\n                                Enter Valid Email Address!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Full Name\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\"  formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Mobile Number\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div>\r\n                                This Field is required!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1\">\r\n                        <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirm Password\">\r\n                        <div class=\"invalid-feedback\">\r\n                            <div *ngIf=\"form.get('confPassword').errors?.required\">\r\n                                This Field is required!!\r\n                            </div>\r\n                            <div *ngIf=\"form.get('confPassword').errors?.isError\">\r\n                                Password does not match!!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                    <div class=\"m-1 mt-4\">\r\n                        <button class=\"button\" type=\"reset\">Reset</button>\r\n                        <button class=\"button\" [disabled]=\"!form.valid\">Sign Up</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n-->\r\n<div class=\"container\">\r\n    <div class=\"row h-100\">\r\n        <div class=\"row d-flex  align-items-center\">\r\n        <div class=\"col-md-6 my-auto image\">\r\n            <img src=\"https://image.freepik.com/free-vector/cute-boy-standing-position-showing-thumb_96037-450.jpg\" alt=\"Boy on Computer\">\r\n        </div>\r\n        <div class=\"col-md-6 my-auto\">\r\n            <div class = \"container\">\r\n                <div class=\"profile\">\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRnhnkpqR8kJoVqpOXDej-weTgEBgeABIe8jw&usqp=CAU\" alt=\"profile\">\r\n                </div>\r\n                <h1 style=\"text-align: center; font-weight: bold;\">WELCOME</h1>\r\n                <div class=\"form\">\r\n                    <form name=\"form\" [formGroup] = \"form\" (ngSubmit) = \"form.valid && onSubmit()\">\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid':form.get('email').touched && form.get('email').invalid}\" autocomplete=\"off\" type=\"email\" placeholder=\"Email\" required>\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div *ngIf=\"form.get('email').errors?.required\">\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                    <div *ngIf=\"form.get('email').errors?.email\">\r\n                                        Enter Valid Email Address!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!-- Full Name-->\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"fullname\" [ngClass]=\"{ 'is-invalid':form.get('fullname').touched && form.get('fullname').invalid}\" type=\"text\" placeholder=\"Full Name\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Mob num-->\r\n                        <div class=\"form-group user\">\r\n                            <!--<i class=\"fas fa-user\"></i>-->\r\n                            <div class=\"m-1\">\r\n                                <input class=\"input form-control\" formControlName=\"mobno\" [ngClass]=\"{ 'is-invalid':form.get('mobno').touched && form.get('mobno').invalid}\" type=\"text\" placeholder=\"Mobile Number\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    <div>\r\n                                        This Field is required!!\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!--password -->\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 \r\n                                    <input class=\"input form-control\" formControlName=\"password\" [ngClass]=\"{ 'is-invalid':form.get('password').touched && form.get('password').invalid }\" type=\"password\" placeholder=\"Password\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div>\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group pass\">\r\n                            \r\n                            <div class=\"m-1\">\r\n                                \r\n                                <!--<i class=\"fas fa-lock\"></i>-->\r\n                                 \r\n                                    <input class=\"input form-control\" type=\"Password\" formControlName=\"confPassword\" [ngClass]=\"{ 'is-invalid':form.get('confPassword').touched && form.get('confPassword').invalid }\" formControlName=\"confPassword\" placeholder=\"Confirm Password\">\r\n                                    <div class=\"invalid-feedback\">\r\n                                        <div *ngIf=\"form.get('confPassword').errors?.required\">\r\n                                            This Field is required!!\r\n                                        </div>\r\n                                        <div *ngIf=\"form.get('confPassword').errors?.isError\">\r\n                                            Password does not match!!\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-12 mt-2 mb-5 d-flex flex-row justify-content-center\">\r\n                                <div class=\"m-1 mt-4\">\r\n                                    <button  type=\"reset\" class=\"btn btn-outline-secondary\">Reset</button>\r\n                                    <button  type=\"submit\" class=\"btn btn-outline-success\"  [disabled]=\"!form.valid\" >Sign Up</button>\r\n                                </div>\r\n                            </div>    \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Bookings } from 'src/app/models/bookings.model';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-bookings',\r\n  templateUrl: './bookings.component.html',\r\n  styleUrls: ['./bookings.component.css']\r\n})\r\nexport class BookingsComponent implements OnInit {\r\n\r\n  show: boolean;\r\n  email$ =  sessionStorage.getItem('email');\r\n  bookings$: Bookings[] = [];\r\n\r\n  constructor(private bookingsService: BookingsService, \r\n    public router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.checkLogin();\r\n    this.getBookingById();\r\n    \r\n  }\r\n\r\n  getBookingById(){\r\n    return this.bookingsService.getBookings(this.email$)\r\n    .subscribe(data => {this.bookings$ = data, this.checkBookingFn();})\r\n  }\r\n\r\n  endBooking(bookingid){\r\n    return this.bookingsService.endBooking(bookingid)\r\n    .subscribe((data:{}) => {\r\n      alert('Booking Confirmed');\r\n      location.reload();\r\n      this.router.navigate(['dashboard/bookings'])\r\n    })\r\n  }\r\n  checkBookingFn(){\r\n    console.log()\r\n    if (this.bookings$.length == 0){\r\n      this.show = true\r\n    }\r\n    else{\r\n      this.show = false\r\n    }\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n    <div class=\"col-md-11 card \" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);;color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>My Bookings</h2>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\r\n                        <div class=\"accordion\" id=\"accordionExample\">\r\n                            <div *ngIf='!show'>\r\n                                <div *ngFor='let booking of bookings$'  class=\"card\">\r\n                                    <div class=\"card-header\" id=\"headingTwo\">\r\n                                        <div class=\"row\">\r\n                                            <div class=\"col-md-3\">\r\n                                                <h3><b>Location :</b> {{booking.locationid}}</h3>\r\n                                            </div>\r\n                                            <div class=\"col-md-7\">\r\n                                                <h3><b>Date :</b> {{booking.time}}</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div class=\"card-body\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-auto mr-auto\">\r\n                                                  <b>Show Time : </b> {{booking.slotid}} <br> \r\n                                                  <b>Seating Type :</b> {{booking.vehicle_type}} <br> \r\n                                                  <b>Count :</b> {{booking.duration}}<br> \r\n                                                  <div *ngIf=\"booking.paid != 0 || booking.paid == 0\">\r\n                                                    <b>Cost :</b> {{booking.cost}} Rs\r\n                                                  </div>\r\n                                                </div>\r\n                                                <div class=\"col-auto\" *ngIf='booking.paid == 0'>\r\n                                                  <button class=\"button\" (click) = 'endBooking(booking.bookingid)'>Confirm</button>\r\n                                                </div>\r\n                                                <div class=\"col-auto\" *ngIf='booking.paid != 0'>\r\n                                                    <p class=\"text-success font-weight-bold\">Booking Completed</p>\r\n                                                  </div>\r\n                                            </div>  \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>  \r\n                            <div *ngIf='show'>\r\n                                <h2>\r\n                                    No Bookings Found...\r\n                                </h2>\r\n                                <button class=\"button\" routerLink='/dashboard' > Book Now</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, Input, Directive, HostListener } from '@angular/core';\r\nimport { BookingsService } from 'src/app/services/bookings.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { SlotsService } from 'src/app/services/slots.service';\r\nimport { Slots } from 'src/app/models/slots.model';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-bookslot',\r\n  templateUrl: './bookslot.component.html',\r\n  styleUrls: ['./bookslot.component.css']\r\n})\r\nexport class BookslotComponent implements OnInit {\r\n\r\n    load : boolean;\r\n    vehicles$: Vehicle[];\r\n    slots$: Slots[];\r\n    locationid = this.actRoute.snapshot.params['locationid'];\r\n    //bannerimage = this.actRoute.snapshot.params['bannerimage'];\r\n    //locationname = this.actRoute.snapshot.params['location_image'];\r\n    currentDate = new Date();\r\n    date = this.currentDate.getDate() + '-' + this.currentDate.getMonth() + '-' + this.currentDate.getFullYear()\r\n    \r\n  @Input() bookingdetails = {\r\n    'email':'',\r\n    'locationid':'',\r\n    'vehicle_type':'',\r\n    'duration':0,\r\n    'time':'',\r\n    'slotid':'',\r\n    'date': '',\r\n    'vehicle_no':'',\r\n  }\r\n  constructor(\r\n    private bookings:BookingsService, \r\n    private slotsService: SlotsService, \r\n    private vehicleService: VehicleService, \r\n    public actRoute :ActivatedRoute, \r\n    public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.load = false;\r\n    this.getVehicles();\r\n    this.getSlotById();\r\n  }\r\n\r\n  getVehicles(){\r\n    return this.vehicleService.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data)\r\n  }\r\n  getSlotById(){\r\n    return this.slotsService.getSlotById(this.locationid)\r\n    .subscribe(data => this.slots$ = data)\r\n  }\r\n\r\n  addBooking(){\r\n    if(this.bookingdetails.vehicle_type == '' || this.bookingdetails.slotid == '' || this.bookingdetails.duration == 0){\r\n      alert('Kindly fill all the data')\r\n      return\r\n    } \r\n    /*if (!this.checkTime(this.bookingdetails.time)){\r\n      alert(\"OOPS!! Try booking 2 hours earlier..\")\r\n      return\r\n    }*/\r\n    this.load = true;\r\n    this.bookings.addBooking(this.locationid, this.bookingdetails)\r\n    .subscribe((data:{}) => {\r\n      alert('Show Booked');\r\n      this.router.navigate(['/dashboard/bookings'])\r\n    })\r\n  }\r\n  /*checkTime(bookingTime){\r\n\r\n  var currentTime = new Date();\r\n  \r\n  var ISTTime = new Date(currentTime.getTime() + (330 + currentTime.getTimezoneOffset())*60000)\r\n  ISTTime.setHours(ISTTime.getHours()+2)\r\n  \r\n  var time = bookingTime.split(':')\r\n  var h = parseInt(time[0])\r\n  var m = parseInt(time[1])\r\n  if (h<ISTTime.getHours() || (h == ISTTime.getHours() && m < ISTTime.getMinutes())){\r\n      return false\r\n  }\r\n    return true;\r\n  }*/\r\n}\r\n","<div class=\"row mt-3 justify-content-center\">\r\n    <div class=\"col-md-11 card\" >\r\n        <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);;color: black;margin: 10px;padding: 10px;\">\r\n            <div class=\"col-md-12 d-flex justify-content-center\" >\r\n                <h2>Book Ticket</h2>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"load\" class=\"d-flex justify-content-center\">\r\n            <div class=\"loadingio-spinner-pulse-f18fi8swilg\"><div class=\"ldio-letfb25733\">\r\n                <div></div><div></div><div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <hr>\r\n        <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"row mb-3\">\r\n                    <div class=\"col-md-12\">\r\n                        <h4>ID: {{locationid}}</h4>\r\n                        <form class=\"card\" name=\"bookingForm\">\r\n                            <!-- select vehicle    -->\r\n                            \r\n                            <!-- end vechicle select -->\r\n\r\n                            <!-- vehicle number enter -->\r\n                            <!--<div class=\"col-md-12 m-2\">\r\n                                    <input class=\"input\" type=\"text\" [(ngModel)]=\"bookingdetails.vehicle_no\" name=\"vehicle_no\" placeholder=\"Vehicle Number\" autocomplete=\"off\" required>\r\n\r\n                                    <small>FORMAT: TN-01-AA-1111</small>\r\n                            </div>-->\r\n                            <!-- end vehicle number -->\r\n\r\n                            <!-- select date and time [(ngModel)]=\"bookingdetails.time\" -->\r\n                            <div class=\"col-md-12 mt-2 mb-3\">\r\n                                <div class=\"row m-2\">\r\n                                    <div>\r\n                                        Select Date : <input type=\"date\" id=\"time\" min=\"27\" max=\"2026-03-24\" [(ngModel)]=\"bookingdetails.time\" name=\"time\">\r\n                                        <!--<br>\r\n                                        <small>NOTE: Book 2 hours earlier</small>-->\r\n                                    </div>            \r\n                                </div>\r\n                            </div>\r\n                            <!-- end date and time -->\r\n                             <!-- select slot    -->\r\n                             <div class=\"col-md-12\">\r\n                                <h4 class=\"m-2\">Select Show</h4>\r\n                                <div class=\"row border \">\r\n                                    <div class=\"col-2 m-1 pt-3 pb-0\"  *ngFor=\"let slot of slots$\" >   \r\n                                        <!--<div  *ngIf=\"slot.status != 0;\" >\r\n                                            \r\n                                            <input type=\"radio\" disabled [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"slotid\" value=\"{{slot.slotid }}\">\r\n                                            <label  id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label> \r\n                                            <small class=\"text-danger\">Already Booked!</small>\r\n                                          \r\n                                        </div>-->    \r\n                                        <div>\r\n                                            <input type=\"radio\"  [(ngModel)]=\"bookingdetails.slotid\" id=\"{{slot.slotno}}\" name=\"disabled\" value=\"{{slot.slotid }}\">\r\n                                            <label id=\"slot\" for=\"{{slot.slotno}}\">{{slot.slotno}}</label><br>\r\n                                        </div>\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- end slot select-->\r\n                              \r\n                            <!-- enter hours    -->\r\n                            <div class=\"col-md-12 mb-3 ml-2\">\r\n                                <p>Enter the Number of Tickets : </p>\r\n                                <input class=\"input mt-0\" name=\"duration\" id=\"duration\" type=\"number\" min=\"1\" max=\"24\" [(ngModel)]=\"bookingdetails.duration\" id=\"duration\" placeholder=\"No Of Tickets\" autocomplete=\"off\"  required>\r\n                            </div>\r\n                            <!-- end hours    -->\r\n                            <div class=\"seater\">\r\n                                <ul class=\"showcase\">\r\n                                    <li>\r\n                                      <div class=\"seat\"></div>\r\n                                      <small>N/A</small>\r\n                                    </li>\r\n                                    <li>\r\n                                      <div class=\"seat selected\"></div>\r\n                                      <small>Selected</small>\r\n                                    </li>\r\n                                    <li>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <small>Occupied</small>\r\n                                    </li>\r\n                                  </ul>\r\n                              \r\n                                  <div class=\"container\">\r\n                                    <div class=\"screen\"></div>\r\n                              <div class=\"seating\">\r\n                            \r\n                             \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                              \r\n                                    <div class=\"row\">\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat occupied\"></div>\r\n                                      <div class=\"seat\"></div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                  <!--<p class=\"text\">\r\n                                    You have selected <span id=\"count\">0</span> seats for a price of $<span\r\n                                      id=\"price\"\r\n                                      >0</span\r\n                                    >\r\n                                  </p>-->\r\n                            </div>\r\n\r\n\r\n                            <div class=\"col-md-12 m-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"vehicle_type\">Select Seating</label>\r\n                                    <select class=\"form-control\"  [(ngModel)]=\"bookingdetails.vehicle_type\" name=\"vehicle_type\" id=\"vehicle_type\">\r\n                                            <option *ngFor='let vehicle of vehicles$' value=\"{{vehicle.vehicle_type}}\">{{vehicle.vehicle_type}}</option>                                  \r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <!-- book button    -->\r\n                            <div class=\"col-md-12 mt-3 mb-5\">\r\n                                <div class=\"m-1 mt-2\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-2\">\r\n                                            <input type=\"reset\" class=\"button\" value=\"Reset\">\r\n                                        </div>\r\n                                        <div class=\"col\">\r\n                                            <button class=\"button\"  (click)='addBooking()'>Book Show</button>\r\n                                        </div>\r\n                                    </div>                                    \r\n                                </div>\r\n                            </div>\r\n                            <!-- end book button -->\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.checkLogin();\r\n  }\r\n\r\n  checkLogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.router.navigate(['login']);\r\n    }\r\n  }\r\n}\r\n","<app-header-login></app-header-login>\r\n<div class=\"row justify-content-center\">\r\n    <div class=\"col-md-2 p-0 sidebar d-flex align-items-center flex-column\">\r\n        <div>\r\n            <button routerLink=\"/dashboard\" class=\"button\">Available Movies</button>\r\n        </div>\r\n        <div>\r\n            <button routerLink=\"/dashboard/bookings\" class=\"button\">My Bookings</button>\r\n        </div>\r\n        <!-- <div>\r\n            <button routerLink=\"/dashboard/bookslot\" class=\"button\">Book Slot</button>\r\n        </div> -->\r\n    </div>\r\n    <div class=\"col-md-10\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Locations } from '../../models/locations.model';\r\nimport { LocationsService } from 'src/app/services/locations.service';\r\nimport { Vehicle } from 'src/app/models/vehicle.model';\r\nimport { VehicleService } from 'src/app/services/vehicle.service';\r\nimport { DashboardComponent } from 'src/app/dashboard/dashboard.component';\r\n\r\n@Component({\r\n  selector: 'app-slots',\r\n  templateUrl: './slots.component.html',\r\n  styleUrls: ['./slots.component.css']\r\n})\r\nexport class SlotsComponent implements OnInit {\r\n\r\n  locations$: Locations[];\r\n  vehicles$: Vehicle[];\r\n  sessionValue : string = \"\";\r\n  slotService: any;\r\n\r\n  constructor(\r\n    private locationsService: LocationsService,\r\n    private vehicleService: VehicleService,\r\n    private dashboardComponent: DashboardComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.dashboardComponent.checkLogin();\r\n    this.loadLocations();\r\n    this.loadVehicle();\r\n  }\r\n\r\n\r\n  loadLocations(){\r\n    return this.locationsService.getLocations()\r\n    .subscribe(data => this.locations$ = data)\r\n  }\r\n\r\n  loadVehicle(){\r\n    return this.vehicleService.getVehicles()\r\n    .subscribe(data => this.vehicles$ = data)\r\n  }\r\n}\r\n","<div class=\"row mt-3  justify-content-center\">\r\n  <div class=\"col-md-11 card\" >\r\n    <div class=\"row \" style=\"background: #cc3d00 radial-gradient(circle at 60% 100%,#ffa436 5%,#cc3d00 94%);color: Black;margin: 10px;padding: 10px;\">\r\n      <div class=\"col-md-12 d-flex justify-content-center\" >\r\n        <h2>Movies</h2>\r\n      </div>\r\n    </div>\r\n    <hr>\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"row mb-3\">\r\n          <div class=\"col-md-12 overflow-auto\" style=\"height: 35rem;\">\r\n            <div>\r\n              <div *ngFor='let location of locations$' class=\"card\">\r\n                <div class=\"card-header flex-row\" >\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                      <h2><b>{{location.location_name}}</b></h2>\r\n                    </div>\r\n                    <div class=\"col-auto\">\r\n                      <button class=\"button\" type=\"button\" routerLink=\"/dashboard/bookslot/{{location.locationid}}\">\r\n                        Book Now\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>             \r\n                <div>\r\n                  <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-7 mr-auto\">\r\n                        <h4><b> Location :</b></h4> <p>{{location.area}}</p>\r\n                        <hr>\r\n                        <h4><b> About : </b></h4> <p>{{location.cast}}</p>\r\n                        <div class=\"col-md-7 mr-auto\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"col-auto mr-auto\">\r\n                        <br><h3><b>Shows :</b> {{location.slots}}</h3>\r\n                        <br><h4><b> Seatings :  </b></h4>\r\n                        <div *ngFor='let vehicle of vehicles$'>\r\n                          <p>{{vehicle.vehicle_type}} : Rs {{vehicle.cost}}</p>\r\n                        </div>\r\n                      </div>\r\n                      <br>\r\n                      <div class=\"col-auto\">\r\n                        <div class=\"col-auto\">\r\n                          <img src=\"{{location.bannerimage}}\" width=\"163px\" height=\"208px\"alt=\"error\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header-login',\r\n  templateUrl: './header-login.component.html',\r\n  styleUrls: ['./header-login.component.css']\r\n})\r\nexport class HeaderLoginComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  logout(){\r\n    sessionStorage.clear();\r\n    console.log(sessionStorage);\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #2089E4 !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\r\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:white;\"><i class=\"fas fa-film\" style=\"color: white;font-size: 30px;\"></i><b>My-Movies</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n      </ul>\r\n      <div class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"button\" routerLink=\"/\">Home</button>\r\n        <button class=\"button\" (click)='logout()'>Logout</button>\r\n      </div>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\" style=\"background-color: #2089E4 !important;box-shadow: 0px 0px 8px rgba(128, 128, 128, 0.438);\">\r\n    <a class=\"navbar-brand\" href=\"#\" style=\"color:white;\"><i class=\"fas fa-film\" style=\"color: white;font-size: 30px;\"></i><b>My-Movies</b></a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n      </ul>\r\n      <div class=\"form-inline my-2 my-lg-0\">\r\n        <button class=\"button\" routerLink=\"/\">Home</button>\r\n        <button class=\"button\" routerLink=\"/signup\">Sign up</button>\r\n        <button class=\"button\" routerLink=\"/login\">Login</button>\r\n      </div>\r\n    </div>\r\n  </nav>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home-main-section',\r\n  templateUrl: './home-main-section.component.html',\r\n  styleUrls: ['./home-main-section.component.css']\r\n})\r\nexport class HomeMainSectionComponent implements OnInit {\r\n\r\n  constructor(private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  checkSession(){\r\n    if (sessionStorage.length == 0){\r\n      \r\n      this.router.navigate(['/login'])\r\n    }\r\n    else{\r\n      this.router.navigate(['/dashboard'])\r\n    }\r\n  }\r\n}\r\n","<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\r\n    <div class=\"col-md-6 d-flex justify-content-center p-0 align-items-center flex-column\">\r\n        <h1><b>Waiting to See your Hero on Screen ?</b></h1>\r\n        <h2>Just Make it By an Click !!</h2>\r\n        <br>\r\n        <div class=\"\">\r\n            <!-- <input class=\"getquote\" type=\"text\" placeholder=\"Parking Slot\"> -->\r\n            <button class=\"getquotebtn btn-warning\"(click)='checkSession()' >Book Now</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n        <div>\r\n            <!--https://thumbs.dreamstime.com/b/concept-booking-movie-ticket-men-women-buy-online-application-mobile-phone-tablet-laptop-devices-isometric-d-flat-188578887.jpg-->\r\n            <img  src=\"https://vectorified.com/image/cinema-ticket-vector-10.jpg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<br><br><br>\r\n<div class=\"row\">\r\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"far fa-money-bill-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Economical</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-history\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Fast</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-primary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-user-shield\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>Easy Booking</p>\r\n    </div>\r\n    <div class=\"col-md-3 options-secondary p-0 d-flex justify-content-center align-items-center flex-column\">\r\n        <i class=\"fas fa-calendar-alt\" style=\"font-size: 60px;margin-bottom: 10px;\"></i>\r\n        <p>24/7</p>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row d-flex justify-content-center\" style=\"height: 70vh;\">\r\n    <div class=\"col-md-6 d-flex justify-content-center align-items-center\">\r\n        <div>\r\n            <img  src=\"https://thumbs.dreamstime.com/b/concept-booking-movie-ticket-men-women-buy-online-application-mobile-phone-tablet-laptop-devices-isometric-d-flat-188578887.jpg\" alt=\"\">\r\n        </div>\r\n    </div>\r\n    <div class=\"col-md-6 d-flex justify-content-center flex-column\">\r\n        <h1><b>How It Works?</b></h1>\r\n        <h4>You can easily choose from any tickets you like without going to the actual theatre for cinema ticket booking. You can sit back at home and book in advance whenever the movie tickets booking starts according to your own convenience.<br>\r\n        </h4>\r\n        <br>\r\n        <div>\r\n            <button class=\"getquotebtn\" (click)='checkSession()'>Book Now</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  show: boolean;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.checklogin();\r\n  }\r\n  checklogin(){\r\n    if (sessionStorage.length == 0){\r\n      this.show = true\r\n    }\r\n    else{\r\n      this.show = false\r\n    }\r\n  }\r\n}\r\n","<app-header *ngIf=\"show\"></app-header>\r\n<app-header-login *ngIf=\"!show\"></app-header-login>\r\n<app-home-main-section></app-home-main-section>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n\r\n  apiUrl = 'http://localhost:8080/admin';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  loginCheck(loginDetails){\r\n    return this._http.post<Boolean>(this.apiUrl,loginDetails, this.httpOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Bookings } from '../models/bookings.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookingsService {\r\n\r\n  apiUrl = 'http://localhost:8080'\r\n  \r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getAllBookings(){\r\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/allBookings')\r\n  }\r\n\r\n  getBookings(email){\r\n    return this._http.get<Bookings[]>(this.apiUrl+'/bookings/getByUser/'+email);\r\n  }\r\n\r\n  addBooking(id,bookings):Observable<Bookings>{\r\n    bookings.locationid = id;\r\n    bookings.email = sessionStorage.getItem('email');\r\n    console.log(bookings);\r\n    return this._http.post<Bookings>(this.apiUrl+'/bookings/add', JSON.stringify(bookings), this.httpOptions ); \r\n  }\r\n\r\n  endBooking(bookingid){\r\n    return this._http.get<Boolean>(this.apiUrl+'/bookings/endBooking/'+bookingid);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Locations } from '../models/locations.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocationsService {\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  apiUrl = 'http://localhost:8080/locations';\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getLocations(){\r\n    return this._http.get<Locations[]>(this.apiUrl);\r\n  }\r\n\r\n  addLocation(location){\r\n    return this._http.post<Boolean>(this.apiUrl+'/add', location, this.httpOptions ); \r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Slots } from '../models/slots.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SlotsService {\r\n\r\n  apiUrl = 'http://localhost:8080'\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n\r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getSlotById(locationid){\r\n    return this._http.get<Slots[]>(this.apiUrl+'/slots/getbyid/'+locationid);\r\n  }\r\n  getAllSlots(){\r\n    return this._http.get<Slots[]>(this.apiUrl+'/slots');\r\n  }\r\n  addSlot(slot){\r\n    return this._http.post<Boolean>(this.apiUrl+'/slots/add', slot, this.httpOptions ); \r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Users } from 'src/app/models/users.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  apiUrl = 'http://localhost:8080/users';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  loginCheck(loginDetails){\r\n    return this._http.post<Boolean>(this.apiUrl+'/login',loginDetails, this.httpOptions);\r\n  }\r\n\r\n  signup(signupDetails){\r\n    return this._http.post<Boolean>(this.apiUrl+'/signup',signupDetails, this.httpOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Vehicle } from '../models/vehicle.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VehicleService {\r\n\r\n  apiUrl = 'http://localhost:8080/vehicle';\r\n\r\n  httpOptions = {\r\n    headers :new HttpHeaders({\r\n      'Content-Type':'application/json'\r\n    })    \r\n  }\r\n  \r\n  constructor(private _http: HttpClient) { }\r\n\r\n  getVehicles(){\r\n    return this._http.get<Vehicle[]>(this.apiUrl);\r\n  }\r\n\r\n  addVehicle(vehicle){\r\n    return this._http.post<Vehicle>(this.apiUrl+'/add', vehicle, this.httpOptions)\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}